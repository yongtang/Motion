services:
  server:
    image: python:3.12-slim
    container_name: ${SCOPE:-motion}-server
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ${PWD}:/app
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: bridge
    command: ["/bin/sh", "-lc", "apt -y -qq update && apt -y -qq install docker.io curl && pip install -r server/requirements.txt && pip install -e . && uvicorn server.server:app --host 0.0.0.0 --port 8080"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8080/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
  react:
    image: node:alpine
    container_name: ${SCOPE:-motion}-react
    restart: unless-stopped
    depends_on:
      - server
    network_mode: "service:server"
    working_dir: /app/react
    volumes:
      - ${PWD}:/app
    command: ["/bin/sh", "-lc", "npm ci --no-audit --no-fund && npm run dev -- --host"]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:5173 > /dev/null || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 20s
  nats:
    image: nats:alpine
    container_name: ${SCOPE:-motion}-nats
    restart: unless-stopped
    depends_on:
      - server
    network_mode: "service:server"
    command: ["-a", "127.0.0.1", "-m", "8222"]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8222/healthz >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s
